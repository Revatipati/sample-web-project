pipeline {
    agent any // selection of agents 
    // defining environment variables 
    environment {
        REPO_NAME  = 'https://github.com/Revatipati/sample-web-project.git'
        BRANCH_NAME = 'master'
        SONAR_TOKEN = credentials('rp-day3- sonar-token')
        SONAR_SERVER_NAME = 'RPSonarQube'
        SONAR_PROJECT_KEY = 'RPProjDay3'
        DOCKER_CREDS = 'rpdockerID'
      //  SONAR_HOME = 'C:\\Users\\Administrator\\Documents\\tools\\sonar-scanner\\bin'

    }
    stages {
        // stage1
        stage('testing and verify of required  commands') {
            steps {                
                echo 'checking sonar version'
                bat 'sonar-scanner --version'
                echo 'checking java version'
                bat 'docker version'
                echo 'chekcing java version'
                bat 'java -version'
            }
        }

        stage('clone') {
            steps {
                echo 'clone repo to project'
                git url: "${REPO_NAME}", branch: "${BRANCH_NAME}"
            }
        }

        stage('SAST') {
            steps {
                echo 'sast with sonar scanner'
                script {
                    withSonarQubeEnv("${SONAR_SERVER_NAME}"){
                        bat """
                        sonar-scanner \
                        -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=${SONAR_HOST_URL}  \
                        -Dsonar.token=${SONAR_TOKEN}
                        """
                    }
                    
                }
                
            }
        }

        stage('build docker image') {
            steps {
                echo 'strat docker image'
                script {
                    def imageName = 'docker.io/revatipatic1/rpwebapp-iis-ltsc2022'
                    def imageTag = 'codev1'
                    docker.build("${imageName}:${imageTag}",".")
                }
                bat 'docker images | findstr rpwebapp'
            }
        }

        stage('SAST using Trivy') {
            steps {
                echo 'scan the conatier image by using Trivy'
                bat 'trivy image registry.hub.docker.com/revatipatic1/rpwebapp-iis-ltsc2022:codev1'
            }
        }

     /*    stage('Docker image push') {
            steps {
                echo 'push the docker hub image'
                script {
                    def imageName  = "revatipatic1/rpwebapp-iis-ltsc2022"
                    def imageTag   = "codev1"
                    def hubCred   = "${DOCKER_CREDS}"
                    // calling jenkins plugin docker pipeline to push
                    docker.withRegistry('https://registry.hub.docker.com',hubCred){
                        docker.image(imageName + ":" + imageTag).push()

                }
            }
        }
     
    } */
    
    }
}